include: 'https://gitlab-templates.ddbuild.io/slack-notifier/v1/template.yml'

stages:
  - build
  - release
  - notify

variables:
  # To release Windows images, we need tools that are not necessarily present on the Windows Gitlab runners
  # (eg. updated versions of awscli, tools to sign images - if we decide to sign buildimages some day)
  # Thus, to release buildimages, we do the same thing as what we do in the Agent: we run the Docker publish script in
  # the buildimage for the highest Windows version supported.
  WINDOWS_RELEASE_IMAGE: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/windows_2004_x64:v3541301-fcf9226

.winbuild: &winbuild
  stage: build
  except: [ tags ]
  script:
    - $SHORT_CI_COMMIT_SHA = $($CI_COMMIT_SHA.Substring(0,7))
    - $SRC_TAG = "v$CI_PIPELINE_ID-$SHORT_CI_COMMIT_SHA"
    - $SRC_IMAGE = "486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/${IMAGE}:${SRC_TAG}"
    - .\build-container.ps1 -Arch $DD_TARGET_ARCH -Tag $SRC_IMAGE
    - If ($lastExitCode -ne "0") { throw "Previous command returned `$lastExitCode" }
    - If ($CI_PIPELINE_SOURCE -ne "schedule") { docker push $SRC_IMAGE } else { exit 0 }
    - If ($lastExitCode -ne "0") { throw "Previous command returned `$lastExitCode" }
  after_script:
    - docker rmi 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/${IMAGE}:v${CI_PIPELINE_ID}-$($CI_COMMIT_SHA.SubString(0,7))

build_windows_1809_x64:
  extends: .winbuild
  tags: [ "runner:windows-docker", "windowsversion:1809" ]
  variables:
    DOCKERFILE: windows/Dockerfile
    IMAGE: windows_1809_x64
    DD_TARGET_ARCH: x64

build_windows_1909_x86:
  extends: .winbuild
  tags: [ "runner:windows-docker", "windowsversion:1909" ]
  variables:
    DOCKERFILE: windows/Dockerfile
    IMAGE: windows_1909_x86
    DD_TARGET_ARCH: x86

.release:
  stage: release
  except: [ tags, schedules ]
  only: [ master ]
  tags: [ "runner:docker", "size:large" ]
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/docker-notary:0.6.1
  script:
    - SRC_IMAGE=486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/$IMAGE:v$CI_PIPELINE_ID-${CI_COMMIT_SHA:0:7}
    - docker pull $SRC_IMAGE
    - docker tag $SRC_IMAGE 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/$IMAGE:latest
    - docker push 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/$IMAGE:latest
    - DOCKER_REGISTRY_LOGIN=$(aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.docker_hub_login --with-decryption --query "Parameter.Value" --out text)
    - aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.docker_hub_pwd --with-decryption --query "Parameter.Value" --out text | docker login --username "$DOCKER_REGISTRY_LOGIN" --password-stdin docker.io
    - docker tag $SRC_IMAGE datadog/agent-buildimages-$IMAGE:v$CI_PIPELINE_ID-${CI_COMMIT_SHA:0:7}
    - docker push datadog/agent-buildimages-$IMAGE:v$CI_PIPELINE_ID-${CI_COMMIT_SHA:0:7}
    - docker tag $SRC_IMAGE datadog/agent-buildimages-$IMAGE:latest
    - docker push datadog/agent-buildimages-$IMAGE:latest
  after_script:
    - docker rmi 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/$IMAGE:v$CI_PIPELINE_ID-${CI_COMMIT_SHA:0:7} datadog/agent-buildimages-$IMAGE:v$CI_PIPELINE_ID-${CI_COMMIT_SHA:0:7} datadog/agent-buildimages-$IMAGE:latest

.winrelease:
  stage: release
  ## this always needs to be the newest available builder version
  tags: [ "runner:windows-docker", "windowsversion:20h2" ]
  script:
    - $SHORT_CI_COMMIT_SHA = $($CI_COMMIT_SHA.Substring(0,7))
    - $SRC_TAG = "v$CI_PIPELINE_ID-$SHORT_CI_COMMIT_SHA"
    - $SRC_IMAGE = "486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/${IMAGE}:${SRC_TAG}"
    - mkdir ci-scripts
    - docker pull $SRC_IMAGE
    - |
      @"
      Set-PSDebug -Trace 1
      `$ErrorActionPreference = "Stop"
      # ECR Login
      `$AWS_ECR_PASSWORD = aws ecr get-login-password --region us-east-1
      docker login --username AWS --password "`$AWS_ECR_PASSWORD" 486234852809.dkr.ecr.us-east-1.amazonaws.com
      # DockerHub login
      `$DOCKER_REGISTRY_LOGIN = aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.docker_hub_login --with-decryption --query "Parameter.Value" --out text
      `$DOCKER_REGISTRY_PWD = aws ssm get-parameter --region us-east-1 --name ci.datadog-agent.docker_hub_pwd --with-decryption --query "Parameter.Value" --out text
      docker login --username "`$DOCKER_REGISTRY_LOGIN" --password "`$DOCKER_REGISTRY_PWD" docker.io
      If (`$lastExitCode -ne "0") { throw "Previous command returned `$lastExitCode" }
      docker tag $SRC_IMAGE 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/${IMAGE}:latest
      docker push 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/${IMAGE}:latest
      If (`$lastExitCode -ne "0") { throw "Previous command returned `$lastExitCode" }
      If ("${DOCKERHUB_IMAGE}" -ne "") {
        docker tag $SRC_IMAGE datadog/${DOCKERHUB_IMAGE}:${DOCKERHUB_TAG_PREFIX}-${SRC_TAG}
        docker push datadog/${DOCKERHUB_IMAGE}:${DOCKERHUB_TAG_PREFIX}-${SRC_TAG}
        If (`$lastExitCode -ne "0") { throw "Previous command returned `$lastExitCode" }
      }
      "@ | out-file ci-scripts/docker-publish.ps1
    - cat ci-scripts/docker-publish.ps1
    - docker run --rm -w C:\mnt -e AWS_NETWORKING=true -e SIGN_WINDOWS=true -v "$(Get-Location):C:\mnt" -v \\.\pipe\docker_engine:\\.\pipe\docker_engine $WINDOWS_RELEASE_IMAGE powershell -C C:\mnt\ci-scripts\docker-publish.ps1
  after_script:
    - $SHORT_CI_COMMIT_SHA = $($CI_COMMIT_SHA.Substring(0,7))
    - $SRC_TAG = "v$CI_PIPELINE_ID-$SHORT_CI_COMMIT_SHA"
    - $SRC_IMAGE = "486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/${IMAGE}:${SRC_TAG}"
    - docker rmi $SRC_IMAGE 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/${IMAGE}:latest
    - If ("${DOCKERHUB_IMAGE}" -ne "") { docker rmi datadog/${DOCKERHUB_IMAGE}:${DOCKERHUB_TAG_PREFIX}-${SRC_TAG}; echo "TEST" }

release_windows_1809_x64:
  extends: .winrelease
  variables:
    IMAGE: windows_1809_x64
    DOCKERHUB_IMAGE: agent-buildimages-windows_x64
    DOCKERHUB_TAG_PREFIX: "1809"

release_windows_1909_x86:
  extends: .winrelease
  variables:
    IMAGE: windows_1909_x86

notify-on-failure:
  extends: .slack-notifier-base
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
      when: on_failure
  dependencies: []
  script: |
    COMMIT_URL="$CI_PROJECT_URL/commit/$CI_COMMIT_SHA"
    AUTHOR=$(git show -s --format="%an" HEAD)
    MESSAGE_TEXT=":red-light: datadog-agent-buildimages build failed for $CI_COMMIT_TITLE (<$COMMIT_URL|$CI_COMMIT_SHORT_SHA>) by $AUTHOR"
    if [ "$CI_PIPELINE_SOURCE" = "schedule" ]; then
      MESSAGE_TEXT="$MESSAGE_TEXT (this was a scheduled build)"
    fi
    postmessage "#agent-platform" "$MESSAGE_TEXT"
